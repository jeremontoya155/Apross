<!DOCTYPE html>
<html lang="es">
<head>
  <title>Recetas</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
  <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
  <script src="https://cdn.jsdelivr.net/npm/flatpickr@4.6.13/dist/l10n/es.js"></script>
  <link rel="stylesheet" href="css/style.css">
  <!-- <link rel="stylesheet" href="css/footer.css"> -->
</head>
<body>
  <div class="contenedorBody">
    <div class="banner">
      <%- include('partials/banner') %>
    </div>
    
    <div class="recetas-container">
      <h2>RECETAS APROSS</h2>
      <div class="formulario">
        <form action="/recetas" method="post" class="form">
          <div class="fechas mitad">
            <div type="text" id="dateRange" class="calendario" name="dateRange" required></div>
            <input type="hidden" id="startDate" name="startDate">
            <input type="hidden" id="endDate" name="endDate">
          </div>
          <div class="sucursal mitad">
            <label for="sucursal">Sucursal:</label>
            <select id="sucursales" name="sucursal">
              <option value="all">Todas las sucursales</option>
            </select>
            <p id="dateError" class="error-message">Seleccione fechas de inicio y fin.</p>
            <div class="recetas-count" id="recetasCount"></div>
          </div>
          <div class="downloadContain">
            <button type="submit" class="download">Descargar Todos los Códigos</button>
          </div>
        </form>
        
        <!-- Nuevas opciones de descarga específicas -->
        <div class="download-options">
          <h3>Descargas Específicas</h3>
          <div class="specific-downloads">
            <div class="download-section">
              <div class="download-info">
                <h4>Códigos APROSS</h4>
                <p>Códigos que empiezan por 9 y contienen "apross"</p>
                <div class="count-display" id="aprossCount">Selecciona fechas para ver cantidad</div>
              </div>
              <button type="button" class="download download-apross" onclick="downloadApross()">
                <i class="fas fa-download"></i> Descargar APROSS
              </button>
            </div>
            
            <div class="download-section">
              <div class="download-info">
                <h4>Códigos PAMI</h4>
                <p>Códigos que empiezan por 8</p>
                <div class="count-display" id="pamiCount">Selecciona fechas para ver cantidad</div>
              </div>
              <button type="button" class="download download-pami" onclick="downloadPami()">
                <i class="fas fa-download"></i> Descargar PAMI
              </button>
            </div>
          </div>
        </div>
       
      
      </div>
      
    </div>
  </div>
  <footer>
    <%- include('partials/footer') %>
  </footer>
 <!-- <%- include('partials/footer') %> -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      setTimeout(() => {
        document.querySelector('.banner').classList.add('cargado');
      }, 700);

      // Cargar sucursales dinámicamente
      fetch('/sucursales')
        .then(response => response.json())
        .then(data => {
          const select = document.getElementById('sucursales');
          data.forEach(sucursal => {
            const option = document.createElement('option');
            option.value = sucursal;
            option.textContent = sucursal;
            select.appendChild(option);
          });
        })
        .catch(error => console.error('Error al cargar sucursales:', error));
    });

    flatpickr("#dateRange", {
      mode: "range",
      inline: true,
      dateFormat: "Y-m-d",
      locale: 'es',
      onChange: function(selectedDates, dateStr, instance) {
        if (selectedDates.length === 2) {
          const startDate = instance.formatDate(selectedDates[0], "Y-m-d");
          const endDate = instance.formatDate(selectedDates[1], "Y-m-d");
          document.getElementById('startDate').value = startDate;
          document.getElementById('endDate').value = endDate;
          document.getElementById('dateError').style.display = 'none';
          // Obtener la sucursal seleccionada
          const sucursal = document.getElementById('sucursales').value;

          // Enviar solicitud AJAX para obtener la cantidad de recetas
          fetch('/recetas-count', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ startDate, endDate, sucursal })
          })
          .then(response => response.json())
          .then(data => {
            updateCounts(data.count);
            // También actualizar los conteos específicos
            updateSpecificCounts();
          })
          .catch(error => console.error('Error:', error));
        } else {
          // Mostrar mensaje de error si no se seleccionaron ambas fechas
          document.getElementById('dateError').style.display = 'block';
        }
      }
    });

    // Actualizar la cantidad de recetas al cambiar la sucursal
    document.getElementById('sucursales').addEventListener('change', () => {
      const startDate = document.getElementById('startDate').value;
      const endDate = document.getElementById('endDate').value;
      const sucursal = document.getElementById('sucursales').value;

      if (startDate && endDate) {
        fetch('/recetas-count', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ startDate, endDate, sucursal })
        })
        .then(response => response.json())
        .then(data => {
          updateCounts(data.count);
          // También actualizar los conteos específicos
          updateSpecificCounts();
        })
        .catch(error => console.error('Error:', error));
      }
    });

    // Función para actualizar el conteo general
    function updateCounts(count) {
      if (count == 0) {
        document.getElementById('recetasCount').textContent = 'No se encontraron recetas';
      } else {
        document.getElementById('recetasCount').textContent = `Recetas encontradas: ${count}`;
      }
    }

    // Función para actualizar conteos específicos
    function updateSpecificCounts() {
      const startDate = document.getElementById('startDate').value;
      const endDate = document.getElementById('endDate').value;
      const sucursal = document.getElementById('sucursales').value;

      if (startDate && endDate) {
        // Obtener conteo APROSS
        fetch('/recetas-apross-count', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ startDate, endDate, sucursal })
        })
        .then(response => response.json())
        .then(data => {
          document.getElementById('aprossCount').textContent = `APROSS encontrados: ${data.count}`;
        })
        .catch(error => console.error('Error:', error));

        // Obtener conteo PAMI
        fetch('/recetas-pami-count', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ startDate, endDate, sucursal })
        })
        .then(response => response.json())
        .then(data => {
          document.getElementById('pamiCount').textContent = `PAMI encontrados: ${data.count}`;
        })
        .catch(error => console.error('Error:', error));
      }
    }

    // Función para descargar códigos APROSS
    function downloadApross() {
      const startDate = document.getElementById('startDate').value;
      const endDate = document.getElementById('endDate').value;
      const sucursal = document.getElementById('sucursales').value;

      if (!startDate || !endDate) {
        alert('Por favor selecciona un rango de fechas');
        return;
      }

      const form = document.createElement('form');
      form.method = 'POST';
      form.action = '/recetas-apross';

      const inputs = [
        { name: 'startDate', value: startDate },
        { name: 'endDate', value: endDate },
        { name: 'sucursal', value: sucursal }
      ];

      inputs.forEach(input => {
        const hiddenField = document.createElement('input');
        hiddenField.type = 'hidden';
        hiddenField.name = input.name;
        hiddenField.value = input.value;
        form.appendChild(hiddenField);
      });

      document.body.appendChild(form);
      form.submit();
      document.body.removeChild(form);
    }

    // Función para descargar códigos PAMI
    function downloadPami() {
      const startDate = document.getElementById('startDate').value;
      const endDate = document.getElementById('endDate').value;
      const sucursal = document.getElementById('sucursales').value;

      if (!startDate || !endDate) {
        alert('Por favor selecciona un rango de fechas');
        return;
      }

      const form = document.createElement('form');
      form.method = 'POST';
      form.action = '/recetas-pami';

      const inputs = [
        { name: 'startDate', value: startDate },
        { name: 'endDate', value: endDate },
        { name: 'sucursal', value: sucursal }
      ];

      inputs.forEach(input => {
        const hiddenField = document.createElement('input');
        hiddenField.type = 'hidden';
        hiddenField.name = input.name;
        hiddenField.value = input.value;
        form.appendChild(hiddenField);
      });

      document.body.appendChild(form);
      form.submit();
      document.body.removeChild(form);
    }
  </script>
</body>
</html>

