<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CAFAPRO - Sistema de Recetas</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/material_blue.css">
  <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
  <script src="https://cdn.jsdelivr.net/npm/flatpickr@4.6.13/dist/l10n/es.js"></script>
  <link rel="stylesheet" href="css/style.css">
</head>
<body>
  <!-- Navigation Header -->
  <nav class="main-nav">
    <div class="nav-container">
      <div class="nav-brand">
        <img src="/images/Cafapro.png" alt="CAFAPRO" class="nav-logo">
        <span class="nav-title">CAFAPRO</span>
      </div>
      <div class="nav-actions">
        <div class="user-info">
          <i class="fas fa-user-circle"></i>
          <span>Sistema de Recetas</span>
        </div>
        <a href="/logout" class="btn-logout">
          <i class="fas fa-sign-out-alt"></i>
          Salir
        </a>
      </div>
    </div>
  </nav>

  <!-- Main Container -->
  <div class="main-container">
    <div class="container-fluid">
      <!-- Header Section -->
      <div class="page-header">
        <div class="header-content">
          <h1 class="page-title">
            <i class="fas fa-prescription-bottle-medical"></i>
            Gestión de Recetas APROSS
          </h1>
          <p class="page-subtitle">Descarga y administra códigos de recetas médicas de forma eficiente</p>
        </div>
      </div>

      <!-- Main Content Grid -->
      <div class="content-grid">
        <!-- Left Panel - Date Selection -->
        <div class="panel date-panel">
          <div class="panel-header">
            <h3><i class="fas fa-calendar-alt"></i> Selección de Fechas</h3>
            <p>Selecciona el rango de fechas para consultar</p>
          </div>
          <div class="panel-body">
            <div class="date-picker-container">
              <div id="dateRange" class="date-picker"></div>
              <input type="hidden" id="startDate" name="startDate">
              <input type="hidden" id="endDate" name="endDate">
            </div>
            <div class="date-info" id="dateInfo">
              <i class="fas fa-info-circle"></i>
              Selecciona un rango de fechas en el calendario
            </div>
          </div>
        </div>

        <!-- Right Panel - Filters and Actions -->
        <div class="panel actions-panel">
          <div class="panel-header">
            <h3><i class="fas fa-filter"></i> Filtros y Acciones</h3>
            <p>Configura los parámetros de búsqueda</p>
          </div>
          <div class="panel-body">
            <!-- Sucursal Selection -->
            <div class="form-group">
              <label for="sucursales" class="form-label">
                <i class="fas fa-building"></i> Sucursal
              </label>
              <select id="sucursales" name="sucursal" class="form-select">
                <option value="all">🏢 Todas las sucursales</option>
              </select>
            </div>

            <!-- Results Summary -->
            <div class="results-summary" id="resultsSummary" style="display: none;">
              <div class="summary-card total-card">
                <div class="summary-icon">
                  <i class="fas fa-prescription-bottle-medical"></i>
                </div>
                <div class="summary-content">
                  <span class="summary-label">Total Recetas</span>
                  <span class="summary-value" id="totalCount">0</span>
                </div>
              </div>
              <div class="summary-card apross-card">
                <div class="summary-icon">
                  <i class="fas fa-hospital"></i>
                </div>
                <div class="summary-content">
                  <span class="summary-label">APROSS</span>
                  <span class="summary-value" id="aprossCount">0</span>
                </div>
              </div>
              <div class="summary-card pami-card">
                <div class="summary-icon">
                  <i class="fas fa-user-md"></i>
                </div>
                <div class="summary-content">
                  <span class="summary-label">PAMI</span>
                  <span class="summary-value" id="pamiCount">0</span>
                </div>
              </div>
            </div>

            <!-- Download Actions -->
            <div class="download-actions" id="downloadActions" style="display: none;">
              <form action="/recetas" method="post" class="download-form">
                <input type="hidden" id="formStartDate" name="startDate">
                <input type="hidden" id="formEndDate" name="endDate">
                <input type="hidden" id="formSucursal" name="sucursal">
                
                <button type="submit" class="btn-download btn-primary">
                  <i class="fas fa-download"></i>
                  <span>Descargar Todos</span>
                  <small>Todos los códigos</small>
                </button>
              </form>
              
              <button type="button" class="btn-download btn-success" onclick="downloadApross()">
                <i class="fas fa-hospital"></i>
                <span>Descargar APROSS</span>
                <small>Solo códigos APROSS</small>
              </button>
              
              <button type="button" class="btn-download btn-info" onclick="downloadPami()">
                <i class="fas fa-user-md"></i>
                <span>Descargar PAMI</span>
                <small>Solo códigos PAMI</small>
              </button>
            </div>

            <!-- Error Message -->
            <div class="error-message" id="errorMessage" style="display: none;">
              <i class="fas fa-exclamation-triangle"></i>
              <span>Por favor selecciona un rango de fechas válido</span>
            </div>
          </div>
        </div>
      </div>

      <!-- Quick Actions Bar -->
      <div class="quick-actions">
        <a href="/listado" class="quick-action-btn">
          <i class="fas fa-list"></i>
          <span>Ver Listado</span>
        </a>
        <button type="button" class="quick-action-btn" onclick="resetFilters()">
          <i class="fas fa-refresh"></i>
          <span>Limpiar Filtros</span>
        </button>
        <button type="button" class="quick-action-btn" onclick="showHelp()">
          <i class="fas fa-question-circle"></i>
          <span>Ayuda</span>
        </button>
      </div>
    </div>
  </div>

  <!-- Footer -->
  <footer class="main-footer">
    <%- include('partials/footer') %>
  </footer>

  <!-- Help Modal -->
  <div id="helpModal" class="modal" style="display: none;">
    <div class="modal-content">
      <div class="modal-header">
        <h3><i class="fas fa-question-circle"></i> Ayuda del Sistema</h3>
        <button type="button" class="modal-close" onclick="closeHelp()">&times;</button>
      </div>
      <div class="modal-body">
        <div class="help-section">
          <h4><i class="fas fa-calendar"></i> Selección de Fechas</h4>
          <p>Haz clic en el calendario para seleccionar un rango de fechas. Puedes hacer clic en una fecha y luego en otra para crear un rango.</p>
        </div>
        <div class="help-section">
          <h4><i class="fas fa-hospital"></i> Códigos APROSS</h4>
          <p>Los códigos APROSS son aquellos que comienzan con el número 9 y contienen la palabra "apross" en su descripción.</p>
        </div>
        <div class="help-section">
          <h4><i class="fas fa-user-md"></i> Códigos PAMI</h4>
          <p>Los códigos PAMI son aquellos que comienzan con el número 8.</p>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Estado global de la aplicación
    const appState = {
      selectedDates: null,
      selectedSucursal: 'all',
      counts: {
        total: 0,
        apross: 0,
        pami: 0
      }
    };

    // Inicialización de la aplicación
    document.addEventListener('DOMContentLoaded', async () => {
      await initializeApp();
    });

    async function initializeApp() {
      try {
        // Cargar sucursales
        await loadSucursales();
        
        // Inicializar el selector de fechas
        initializeDatePicker();
        
        // Configurar eventos
        setupEventListeners();
        
        // Mostrar animación de carga completada
        showLoadingComplete();
      } catch (error) {
        console.error('Error al inicializar la aplicación:', error);
        showError('Error al cargar la aplicación');
      }
    }

    async function loadSucursales() {
      try {
        const response = await fetch('/sucursales');
        const data = await response.json();
        
        const select = document.getElementById('sucursales');
        data.forEach(sucursal => {
          const option = document.createElement('option');
          option.value = sucursal;
          option.textContent = `Sucursal ${sucursal}`;
          select.appendChild(option);
        });
      } catch (error) {
        console.error('Error al cargar sucursales:', error);
      }
    }

    function initializeDatePicker() {
      flatpickr("#dateRange", {
        mode: "range",
        inline: true,
        dateFormat: "Y-m-d",
        locale: 'es',
        theme: 'material_blue',
        monthSelectorType: 'dropdown',
        yearSelectorType: 'dropdown',
        showMonths: 1,
        onChange: handleDateChange,
        onReady: function(dateObj, dateStr, instance) {
          // Personalizar el calendario
          const calendar = instance.calendarContainer;
          calendar.classList.add('custom-calendar');
        }
      });
    }

    function setupEventListeners() {
      // Cambio de sucursal
      document.getElementById('sucursales').addEventListener('change', handleSucursalChange);
      
      // Click en modal overlay
      document.getElementById('helpModal').addEventListener('click', function(e) {
        if (e.target === this) {
          closeHelp();
        }
      });
    }

    async function handleDateChange(selectedDates, dateStr, instance) {
      if (selectedDates.length === 2) {
        const startDate = instance.formatDate(selectedDates[0], "Y-m-d");
        const endDate = instance.formatDate(selectedDates[1], "Y-m-d");
        
        appState.selectedDates = { startDate, endDate };
        
        // Actualizar campos ocultos
        document.getElementById('startDate').value = startDate;
        document.getElementById('endDate').value = endDate;
        document.getElementById('formStartDate').value = startDate;
        document.getElementById('formEndDate').value = endDate;
        document.getElementById('formSucursal').value = appState.selectedSucursal;
        
        // Actualizar información de fechas
        updateDateInfo(startDate, endDate);
        
        // Ocultar mensaje de error
        hideError();
        
        // Obtener y mostrar conteos
        await updateAllCounts();
        
        // Mostrar controles de descarga
        showDownloadActions();
      } else {
        // Ocultar controles si no hay fechas válidas
        hideDownloadActions();
        hideResults();
        showError('Selecciona un rango de fechas completo');
      }
    }

    async function handleSucursalChange() {
      const sucursal = document.getElementById('sucursales').value;
      appState.selectedSucursal = sucursal;
      
      // Actualizar campo oculto
      document.getElementById('formSucursal').value = sucursal;
      
      if (appState.selectedDates) {
        await updateAllCounts();
      }
    }

    async function updateAllCounts() {
      if (!appState.selectedDates) return;
      
      const { startDate, endDate } = appState.selectedDates;
      const sucursal = appState.selectedSucursal;
      
      try {
        // Mostrar loading
        showLoading();
        
        // Obtener todos los conteos en paralelo
        const [totalResponse, aprossResponse, pamiResponse] = await Promise.all([
          fetch('/recetas-count', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ startDate, endDate, sucursal })
          }),
          fetch('/recetas-apross-count', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ startDate, endDate, sucursal })
          }),
          fetch('/recetas-pami-count', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ startDate, endDate, sucursal })
          })
        ]);

        const [totalData, aprossData, pamiData] = await Promise.all([
          totalResponse.json(),
          aprossResponse.json(),
          pamiResponse.json()
        ]);

        // Actualizar estado
        appState.counts = {
          total: parseInt(totalData.count),
          apross: parseInt(aprossData.count),
          pami: parseInt(pamiData.count)
        };

        // Actualizar UI
        updateCountsDisplay();
        showResults();
        
      } catch (error) {
        console.error('Error al obtener conteos:', error);
        showError('Error al obtener los datos');
      } finally {
        hideLoading();
      }
    }

    function updateCountsDisplay() {
      const { total, apross, pami } = appState.counts;
      
      // Actualizar contadores con animación
      animateCounter('totalCount', total);
      animateCounter('aprossCount', apross);
      animateCounter('pamiCount', pami);
      
      // Habilitar/deshabilitar botones según disponibilidad
      updateButtonStates();
    }

    function animateCounter(elementId, targetValue) {
      const element = document.getElementById(elementId);
      const startValue = parseInt(element.textContent) || 0;
      const duration = 800;
      const startTime = performance.now();
      
      function updateCounter(currentTime) {
        const elapsed = currentTime - startTime;
        const progress = Math.min(elapsed / duration, 1);
        const easeOutQuart = 1 - Math.pow(1 - progress, 4);
        const currentValue = Math.round(startValue + (targetValue - startValue) * easeOutQuart);
        
        element.textContent = currentValue.toLocaleString();
        
        if (progress < 1) {
          requestAnimationFrame(updateCounter);
        }
      }
      
      requestAnimationFrame(updateCounter);
    }

    function updateButtonStates() {
      const downloadButtons = document.querySelectorAll('.btn-download');
      const { total, apross, pami } = appState.counts;
      
      downloadButtons.forEach(btn => {
        if (btn.onclick && btn.onclick.toString().includes('downloadApross')) {
          btn.disabled = apross === 0;
        } else if (btn.onclick && btn.onclick.toString().includes('downloadPami')) {
          btn.disabled = pami === 0;
        } else {
          btn.disabled = total === 0;
        }
      });
    }

    function updateDateInfo(startDate, endDate) {
      const dateInfo = document.getElementById('dateInfo');
      const start = new Date(startDate).toLocaleDateString('es-ES', {
        day: 'numeric',
        month: 'long',
        year: 'numeric'
      });
      const end = new Date(endDate).toLocaleDateString('es-ES', {
        day: 'numeric',
        month: 'long',
        year: 'numeric'
      });
      
      dateInfo.innerHTML = `
        <i class="fas fa-calendar-check"></i>
        <strong>Período seleccionado:</strong><br>
        ${start} - ${end}
      `;
    }

    // Funciones de descarga
    async function downloadApross() {
      if (!validateDownload()) return;
      
      showDownloadProgress('Preparando descarga de códigos APROSS...');
      await submitDownloadForm('/recetas-apross');
    }

    async function downloadPami() {
      if (!validateDownload()) return;
      
      showDownloadProgress('Preparando descarga de códigos PAMI...');
      await submitDownloadForm('/recetas-pami');
    }

    function validateDownload() {
      if (!appState.selectedDates) {
        showError('Por favor selecciona un rango de fechas');
        return false;
      }
      return true;
    }

    async function submitDownloadForm(action) {
      const { startDate, endDate } = appState.selectedDates;
      const sucursal = appState.selectedSucursal;
      
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = action;
      
      const inputs = [
        { name: 'startDate', value: startDate },
        { name: 'endDate', value: endDate },
        { name: 'sucursal', value: sucursal }
      ];
      
      inputs.forEach(input => {
        const hiddenField = document.createElement('input');
        hiddenField.type = 'hidden';
        hiddenField.name = input.name;
        hiddenField.value = input.value;
        form.appendChild(hiddenField);
      });
      
      document.body.appendChild(form);
      form.submit();
      document.body.removeChild(form);
      
      // Ocultar progreso después de un momento
      setTimeout(hideDownloadProgress, 2000);
    }

    // Funciones de utilidad
    function resetFilters() {
      // Limpiar fechas
      const dateRange = document.querySelector('#dateRange')._flatpickr;
      dateRange.clear();
      
      // Resetear sucursal
      document.getElementById('sucursales').value = 'all';
      appState.selectedSucursal = 'all';
      
      // Limpiar estado
      appState.selectedDates = null;
      appState.counts = { total: 0, apross: 0, pami: 0 };
      
      // Ocultar elementos
      hideResults();
      hideDownloadActions();
      hideError();
      
      // Actualizar info de fechas
      document.getElementById('dateInfo').innerHTML = `
        <i class="fas fa-info-circle"></i>
        Selecciona un rango de fechas en el calendario
      `;
    }

    function showHelp() {
      document.getElementById('helpModal').style.display = 'flex';
      document.body.style.overflow = 'hidden';
    }

    function closeHelp() {
      document.getElementById('helpModal').style.display = 'none';
      document.body.style.overflow = 'auto';
    }

    // Funciones de UI
    function showResults() {
      document.getElementById('resultsSummary').style.display = 'block';
    }

    function hideResults() {
      document.getElementById('resultsSummary').style.display = 'none';
    }

    function showDownloadActions() {
      document.getElementById('downloadActions').style.display = 'block';
    }

    function hideDownloadActions() {
      document.getElementById('downloadActions').style.display = 'none';
    }

    function showError(message) {
      const errorElement = document.getElementById('errorMessage');
      errorElement.querySelector('span').textContent = message;
      errorElement.style.display = 'flex';
    }

    function hideError() {
      document.getElementById('errorMessage').style.display = 'none';
    }

    function showLoading() {
      // Implementar loading spinner si es necesario
    }

    function hideLoading() {
      // Ocultar loading spinner
    }

    function showLoadingComplete() {
      // Animación de carga completada
    }

    function showDownloadProgress(message) {
      // Mostrar mensaje de progreso de descarga
      console.log(message);
    }

    function hideDownloadProgress() {
      // Ocultar mensaje de progreso
    }

    // Cerrar modal con tecla Escape
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        closeHelp();
      }
    });
  </script>
</body>
</html>
